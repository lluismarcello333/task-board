{"ast":null,"code":"var _jsxFileName = \"/home/luiz/Documentos/projects/React/todo-list/src/Context/TasksContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TasksContext = /*#__PURE__*/createContext({});\nexport const TasksProvider = ({\n  children\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const tasksOnLocalStorage = localStorage.getItem('tasks');\n    if (tasksOnLocalStorage) {\n      setTasks(JSON.parse(tasksOnLocalStorage));\n    }\n    ;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TasksContext.Provider, {\n    value: {\n      tasks,\n      setTasks\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksProvider, \"pp7yD9r51yXNeBr+YUMQivetbeQ=\");\n_c = TasksProvider;\nvar _c;\n$RefreshReg$(_c, \"TasksProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","jsxDEV","_jsxDEV","TasksContext","TasksProvider","children","_s","tasks","setTasks","tasksOnLocalStorage","localStorage","getItem","JSON","parse","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/luiz/Documentos/projects/React/todo-list/src/Context/TasksContext.tsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\nexport interface Task {\n  title: string;\n  done: boolean;\n  id: number;\n}\n\n\ninterface TasksContextData {\n  tasks: Task[];\n  setTasks: React.Dispatch<React.SetStateAction<Task[]>>;\n}\n\nexport const TasksContext = createContext({} as TasksContextData);\n\ninterface TasksProviderPorps {\n  children: React.ReactNode;\n}\n\nexport const TasksProvider: React.FC<TasksProviderPorps> = ({ children }) => {\n  const [tasks, setTasks] = useState([] as Task[]);\n\n  useEffect(() => {\n    const tasksOnLocalStorage =localStorage.getItem('tasks');\n\n    if (tasksOnLocalStorage) {\n        setTasks(JSON.parse(tasksOnLocalStorage));\n    };\n  }, [])\n\n  return (\n    <TasksContext.Provider value={{\n        tasks,\n        setTasks\n    }}>\n      {children}\n    </TasksContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAc3D,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC,CAAqB,CAAC;AAMjE,OAAO,MAAMM,aAA2C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAY,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMU,mBAAmB,GAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAExD,IAAIF,mBAAmB,EAAE;MACrBD,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACJ,mBAAmB,CAAC,CAAC;IAC7C;IAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACC,YAAY,CAACW,QAAQ;IAACC,KAAK,EAAE;MAC1BR,KAAK;MACLC;IACJ,CAAE;IAAAH,QAAA,EACCA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACb,EAAA,CAnBWF,aAA2C;AAAAgB,EAAA,GAA3ChB,aAA2C;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}