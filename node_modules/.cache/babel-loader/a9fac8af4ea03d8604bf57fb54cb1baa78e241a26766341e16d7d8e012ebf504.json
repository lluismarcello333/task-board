{"ast":null,"code":"var _jsxFileName = \"/home/luiz/Documentos/projects/React/todo-list/src/components/Tasks/Tasks.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styles from \"./styles.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Tasks = () => {\n  _s();\n  const [tasksTitle, setTaskTitle] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  function handleSubmitAddTask(e) {\n    e.preventDefault();\n    if (tasksTitle.length < 3) {\n      alert(\"Não é possível adicionar uma tarefa com menos de três letras.\");\n      return;\n    }\n\n    //Adicionando a tarefa\n    const newTasks = [...tasks, {\n      id: new Date().getTime(),\n      title: tasksTitle,\n      done: false\n    }];\n    setTasks(newTasks);\n    localStorage.setItem('tasks', JSON.stringify(newTasks));\n    setTaskTitle(\"\");\n  }\n  useEffect(() => {\n    const tasksOnLocalStorage = localStorage.getItem('tasks');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitAddTask,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"task_title\",\n          children: \"Adicionar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: tasksTitle,\n          onChange: e => setTaskTitle(e.target.value),\n          type: \"text\",\n          id: \"task_title\",\n          placeholder: \"T\\xEDtulo da Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Adicionar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `task-${task.id}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `task-${task.id}`,\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"CvRV8Tp8GVLmL3Mp8tP40yZOCyo=\");\n_c = Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useEffect","useState","styles","jsxDEV","_jsxDEV","Tasks","_s","tasksTitle","setTaskTitle","tasks","setTasks","handleSubmitAddTask","e","preventDefault","length","alert","newTasks","id","Date","getTime","title","done","localStorage","setItem","JSON","stringify","tasksOnLocalStorage","getItem","className","container","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","type","placeholder","map","task","_c","$RefreshReg$"],"sources":["/home/luiz/Documentos/projects/React/todo-list/src/components/Tasks/Tasks.tsx"],"sourcesContent":["import { FormEvent, useEffect, useState } from \"react\";\nimport styles from \"./styles.module.scss\";\n\ninterface Task {\n  title: string;\n  done: boolean;\n  id: number;\n}\n\nexport const Tasks: React.FC = () => {\n  const [tasksTitle, setTaskTitle] = useState(\"\");\n  const [tasks, setTasks] = useState([] as Task[]);\n\n  function handleSubmitAddTask(e: FormEvent) {\n    e.preventDefault();\n\n    if (tasksTitle.length < 3) {\n      alert(\"Não é possível adicionar uma tarefa com menos de três letras.\");\n      return;\n    }\n\n    //Adicionando a tarefa\n    const newTasks = [...tasks, { id: new Date().getTime(), title: tasksTitle, done: false }\n    ]\n\n    setTasks(newTasks);\n    localStorage.setItem('tasks', JSON.stringify(newTasks));\n\n\n    setTaskTitle(\"\");\n  }\n\n  useEffect(() => {\n    const tasksOnLocalStorage =localStorage.getItem('tasks');\n  }, [])\n\n  return (\n    <section className={styles.container}>\n      <form onSubmit={handleSubmitAddTask}>\n        <div>\n          <label htmlFor=\"task_title\">Adicionar Tarefa</label>\n          <input\n            value={tasksTitle}\n            onChange={(e) => setTaskTitle(e.target.value)}\n            type=\"text\"\n            id=\"task_title\"\n            placeholder=\"Título da Tarefa\"\n          />\n        </div>\n\n        <button type=\"submit\">Adicionar</button>\n      </form>\n\n      <ul>\n        {tasks.map((task) => {\n          return (\n            <li key={task.id}>\n              <input type=\"checkbox\" id={`task-${task.id}`} />\n              <label htmlFor={`task-${task.id}`}>{task.title}</label>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}