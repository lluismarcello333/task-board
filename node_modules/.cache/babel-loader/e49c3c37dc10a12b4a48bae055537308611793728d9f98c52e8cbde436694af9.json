{"ast":null,"code":"var _jsxFileName = \"/home/luiz/Documentos/projects/React/todo-list/src/components/Concepts/Memoization.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Memoization = ({\n  finacialData\n}) => {\n  _s();\n  // Estado que define se os valores devem ser mostrados ou não\n  const [showValues, setShowValues] = useState(true);\n  const totalIncomes = finacialData.incomes.reduce((total, income) => {\n    return total += income;\n  }, 0);\n  const totalOutcomes = finacialData.outcomes.reduce((total, outcome) => {\n    return total += outcome;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memoization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"usMemo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Total de receitas: R$ ${showValues ? totalIncomes : 'XXXXX'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Total de despesas: R$ ${showValues ? totalOutcomes : 'XXXXX'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setShowValues(!showValues);\n      },\n      children: showValues ? 'Ocultar valores' : 'Mostrar valores'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Memoization, \"t3sEb3GWwF8k6k/ueRctOABhHNI=\");\n_c = Memoization;\nvar _c;\n$RefreshReg$(_c, \"Memoization\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Memoization","finacialData","_s","showValues","setShowValues","totalIncomes","incomes","reduce","total","income","totalOutcomes","outcomes","outcome","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/luiz/Documentos/projects/React/todo-list/src/components/Concepts/Memoization.tsx"],"sourcesContent":["import { useState } from \"react\";\n\ninterface MemoizationProps {\n  finacialData: {\n    incomes: number[];\n    outcomes: number[];\n  };\n}\n\nexport const Memoization: React.FC<MemoizationProps> = ({ finacialData }) => {\n  // Estado que define se os valores devem ser mostrados ou não\n  const [showValues, setShowValues] = useState(true);\n\n  const totalIncomes = finacialData.incomes.reduce((total, income) => {\n    return (total += income);\n  }, 0);\n\n  const totalOutcomes = finacialData.outcomes.reduce((total, outcome) => {\n    return (total += outcome);\n  }, 0);\n\n  return (\n    <div style={{ padding: \"2rem\" }}>\n      <h1>Memoization</h1>\n\n      <h2>usMemo</h2>\n\n      <p>{`Total de receitas: R$ ${showValues ? totalIncomes : 'XXXXX'}`}</p>\n      <br />\n      <p>{`Total de despesas: R$ ${showValues ? totalOutcomes : 'XXXXX'}`}</p>\n      <br />\n      <br />\n      <button\n        onClick={() => {\n          setShowValues(!showValues);\n        }}\n      >\n        {showValues ? 'Ocultar valores' : 'Mostrar valores'}\n      </button>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASjC,OAAO,MAAMC,WAAuC,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC3E;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMQ,YAAY,GAAGJ,YAAY,CAACK,OAAO,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAK;IAClE,OAAQD,KAAK,IAAIC,MAAM;EACzB,CAAC,EAAE,CAAC,CAAC;EAEL,MAAMC,aAAa,GAAGT,YAAY,CAACU,QAAQ,CAACJ,MAAM,CAAC,CAACC,KAAK,EAAEI,OAAO,KAAK;IACrE,OAAQJ,KAAK,IAAII,OAAO;EAC1B,CAAC,EAAE,CAAC,CAAC;EAEL,oBACEb,OAAA;IAAKc,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BhB,OAAA;MAAAgB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpBpB,OAAA;MAAAgB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEfpB,OAAA;MAAAgB,QAAA,EAAK,yBAAwBZ,UAAU,GAAGE,YAAY,GAAG,OAAQ;IAAC;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvEpB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpB,OAAA;MAAAgB,QAAA,EAAK,yBAAwBZ,UAAU,GAAGO,aAAa,GAAG,OAAQ;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxEpB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpB,OAAA;MACEqB,OAAO,EAAEA,CAAA,KAAM;QACbhB,aAAa,CAAC,CAACD,UAAU,CAAC;MAC5B,CAAE;MAAAY,QAAA,EAEDZ,UAAU,GAAG,iBAAiB,GAAG;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACjB,EAAA,CAhCWF,WAAuC;AAAAqB,EAAA,GAAvCrB,WAAuC;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}